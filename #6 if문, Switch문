// 조건문 (if문)

var number = 10


//number라는 변수에 10이 들어있고, if문장을 만났을 때 조건인 10보다 작거나 같으면(참이면)? 중괄호 내용을 실행한다.
// 조건이 거짓이면 중괄호 내용을 실행하지 않는다.

if number <= 10 {
    print("10보다 작거나 같다.")
}

if number <= 12 {
    print("12보다 작다")
    
    //:> "조건"의 자리에는 결과가 참 또는 거짓이 나와야함
    
    
    
    // 조건문(if - else)
    
    number = 20
    
    
    if number <= 10 {
        print("10보다 작거나 같다.")
    } else {
        print("10보다 크다.")
    }
    
    
    
    
    // if - else if - else
    
    number = 40
    
    if number <= 10 {
        print("10보다 작거나 같다.")
    } else if number >= 30 {
        print("30보다 크거나 같다.")
    } else {
        print("10보다 크고 30보다 작거나 같다.")
    }
    
    
    
    
    // if - else if
    
    number = 72
    
    if number <= 10 {
        print("10보다 작거나 같다.")
    } else if number >= 30 {
        print("30보다 크거나 같다.")
    }
    
    
    
    /*:
     ---
     * 1) if문에서 논리적인 구조 및 조건의 순서가 중요
     ---
     */
    // 논리적인 오류 없도록 구성해야함 ==========
    
    
    var num1 = 8
    
    //아래 조건문들은 오류가 나는 구조다!
    if num1 >= 0 {
        print("0 또는 양수입니다.")
    } else if num1 % 2 == 0 {     // 짝수를 확인하는 조건 (자주 사용됨)
        print("양의 짝수입니다.")     // 어떤 숫자를 2로 나눴을 때 나머지는 항상 0 아니면 1이 나오게 되어있음
    } else if num1 % 2 == 1 {    // 홀수를 확인하는 조건 (자주 사용됨)
        print("양의 홀수입니다.")
    } else {
        print("음수입니다.")
    }
    
    
    
    // 올바르게 수정해 본다면? ================
    
    if num1 >= 0 {
        print("0 또는 양수입니다.")
        
        if num1 % 2 == 0 {
            print("짝수입니다.")
            
        } else if num1 % 2 == 1 {
            print("홀수입니다.")
        }
        
    } else {
        print("음수입니다.")
    }
}
    
    
    
    // 조건의 확인 순서를 잘 고려해야함 ==========
    
    
    var score = 100
    
    // 아래는 잘못 만든 구조! 첫줄만 인식하고 나머지 아래 코드는 체크도 안해버림
    if score >= 70 {
        print("70점이상입니다.")
    } else if score >= 80 {
        print("80점이상입니다.")
    } else if score >= 90 {
        print("90점이상입니다.")
    } else {
        print("70점미만입니다.")
    }
    
    
    
    // 올바르게 수정해 본다면 ================
    // ⭐️범위가 작은 조건이 먼저 와야함
    
    if score >= 90 {                // ⭐️범위가 작은 조건이 먼저 와야함
        print("90점이상입니다.")
    } else if score >= 80 {
        print("80점이상입니다.")
    } else if score >= 70 {
        print("70점이상입니다.")
    } else {
        print("70점미만입니다.")
    }
    
    
    
    
    
    /*:
     ---
     * 2) 조건을 &&(and), 또는 ||(or)로 연결하는 것도 가능
     ---
     */
    var email = "a@gmail.com"
    var password = "1234"
    
    
    
    if email == "a@gmail.com" && password == "1234" {
        print("메인페이지로 이동")
    }
    
    
    
    if email != "a@gmail.com" || password != "1234" {
        print("경고메세지 띄우기")
        print("이메일주소 또는 패스워드가 올바르지 않습니다.")
    }
    
    
    
    
    /*:
     ---
     * 3) 중첩 사용 가능
     ---
     */
    
    var score1 = 81;
    
    if score1 >= 70 {
        
        if score1 == 100 {
            print("만점")
        } else {
            print("70점이상")
        }
        
    }
    
    
    
    //:> 프로그래밍에서는 타입만 일치하면 언제든지 중첩이 가능(2중, 3중 상관없음)
    
    
    
    /*:
     ---
     * 참고 - 접근 연산자 (.)
     ---
     */
    // 한식.볶음밥.당근
    
    // 중식.짜장면.춘장
    
    var id = "abcedf"
    
    id.count    //문자열의 개수를 세줌
    
    "abcdef".count
    
    
    id.isEmpty      //값이 비어있니? 라고 물어봄  false == 비어있지 않다는 뜻, True == 비어있다는 뜻
    
    id.dropFirst()  //첫번째 문자열을 제외하고 나머지를 알려줌
    
    
    
    
    
    
    /*:
     ## 조건문(if문)의 활용
     * 언제 사용할까? 활용예시
     ---
     */
    
    // 사용자의 아이디가 일치하고, 비밀번호도 일치 한다면
    
    // 입력된 아이디의 글자수가 6자리 이상이라면
    
    

    
    
    if id.count >= 6 {          //  .count는 내장된 기능 (지금은 몰라도 됨)
        print("아이디가 6글자 이상이네요. 다음 화면으로 넘어가겠습니다.")
    }
    
    
    
    
    
    // 가위 / 바위 / 보
    
    
   /*
    var choice = 1    // 0: 가위, 1: 바위, 2: 보
    
    
    if choice == 0 {
        print("가위입니다.")
    } else if choice == 1 {
        print("바위입니다")
    } else if choice == 2 {
        print("보입니다.")
    }

    */


----------------------------------------------------------


 ## 2) Switch문
 - 표현식/변수를 (매칭시켜) 분기처리할때 사용하는 조건문
 
// if문보다 한정적인 상황에서 사용
// Swtich문은 if문보다 한정적인 상황에서 사용

var choice: String = "안녕"

// 조건을 부등식이 아닌 "=="와만 비교
// 변수가 어떤값을 가지냐에 따라 실행문을 선택하고 진행
// 그럼 어떻게 사용하지? Switch옆에 변수를 쓰고 중괄호로 시작해서 끝낸다.
// "가위" == choice , 가위와 choice라는 변수가 같은지 비교하고 맞다면 다음 코드를 실행한다.
// 비교하는 문자열은 서로 같은 타입이어야한다.

switch choice {       // 변수(표현식)
case "가위":          // "가위" == choice 와 같은지 비교
    print("가위 입니다.")
case "바위":          // "바위" == choice 와 같은지 비교
    print("바위 입니다.")
case "보":           // "보" == choice 와 같은지 비교
    print("보 입니다.")
default:            // 어디에도 해당되지 않을 때 사용
    print("다 해당되지 않음")
    break           // 깬다는 약속의 의미. 아무것도 Switch문에서 아무것도 실행하지 않게 만들기 위해 사용.
}



/**=======================================================
 [스위치문의 특징]
 - 1) 스위치문에서 케이스의 ,(콤마)는 '또는'의 의미로 하나의 케이스에
      여러 매칭값을 넣을 수 있음
 - 2) switch 문은 (비교하고 있는)값의 가능한 모든 경우의 수를 반드시
      다루어야 함 (exhaustive: 하나도 빠뜨리는 것 없이, 철저하게)
      모든 사례를 다루지 않았을 때에는 디폴트 케이스가 반드시 있어야 한다.
 - 3) 각 케이스에는 문장이 최소 하나 이상 있어야 하며 만약 없다면 컴파일
      에러 발생(의도하지 않은 실수를 방지 목적)
      실행하지 않으려면, break를 반드시 입력해야함 (if문에서는 실행문을
      입력안해도 괜찮지만, 스위치문에서는 필요함)
=========================================================**/

var choice1:String = "바위"

switch choice1 {  // 문자열
case "가위":
    print("가위 입니다.")
case "바위", "보":         //"바위" 또는 "보"인 경우 비교하며, 하나만 맞아도 참이며, 다음 코드를 실행.
    print("바위 또는 보 입니다.")
default:
    break
}
// ⭐️ 문자열인 경우, 철저하게 모든 케이스를 총 망라해야하기 때문에 마지막에 반드시 default: 로 끝나야한다.
// ⭐️ Switch문에서 실행 안하는 경우, break를 꼭 써야하는건 약속이다!



var isTrue = true       // 참 아니면 거짓의 경우는, 참 또는 거짓만 있으니 굳이 default문을 써줄 필요 없다.


switch isTrue {
case true:
    print("true")
case false:
    print("false")
}




/*:
 ---
 * fallthrough 키워드의 사용
 ---
 */

var num1 = 10

switch num1 {
case ..<10:
    print("1")        // 매칭된 값에 대한 고려없이 무조건 다음블럭을 실행함
    fallthrough       // 다음 문장을 바로 실행하라는 명령
case 10:
    print("2")
    fallthrough
default:
    print("3")
}



let weather = "sunny"  // Bring un Umbrella 출력됨
switch weather {
case "rain":
    print("Bring an Umbrella")
case "snow":
    print("Wrap up warm")
case "sunny":
    print("Wear sunscreen")
    fallthrough    // switch구문의 case를 연속실행하려면 해당 키워드 사용
default:
    print("Enjoy your day!")
}

/*:
 ---
 * switch문의 범위 매칭 - 패턴 매칭 연산자와 관련
 ---
 */

// ⭐️ 잘못 작성된 예시 =====================


// 비교연산자와 값을 넣으면 안되고, 비교하려는 값이 와야함

//switch temperature {
//case  < 0 :    //이런식으로 작성하면 안된다. 비교할 값을 써야한다 ==>   ..<0
//    print("영하 - 0미만")
//case >= 0 && <= 18 :     //이런식으로 작성하면 안된다. ==>   0...
//    print("0이상 무덥지 않은 날씨")
//default :
//    break
//}





// 부등식을 사용될 수 없는 대신에, 범위 매칭을 지원


var num = 30

// ⭐️ 범위연산자(...), 패턴매칭연산자(~=) -> 참과 거짓의 결과가 나옴

0...50 ~= num
0...50      // (... == 범위연산자) 0부터 50까지의 숫자 범위를 나타내는 연산자
~= num      // (~= == 패턴매칭연산자)
51...100 ~= num       // 숫자 범위 안에 뒤에 있는 변수의 숫자가 속한다면? 참인지 거짓인지 알려주는 연산자




switch num {
case 0...50:      // 0...50 ~= 30 내부적으로 패턴매칭으로 확인
    print("숫자의 범위: 0 ~ 50")
case 51...100:
    print("숫자의 범위: 51 ~ 100")
default:
    print("그 외의 범위")
}


// 범위연산자에 쩜이 2개 있는 건 뭐지? 0..<5
// 0..<5 범위 == 5보다 작은 숫자 까지만 해당 0, 1, 2, 3, 4 까지만임

var temperature = 19

switch temperature {
case ..<0:       //..<0 == 정수의 범위에서 가장 낮은 숫자부터 ~ 0까지를 의미, 결국 -(minus)범위를 의미
    print("영하 - 0도 미만")
case 0...18:
    print("0도 이상 무덥지 않은 날씨")
case 19...:
    print("여름 날씨")
default:        // 정수의 범위를 다루려면 무조건 default:문을 써야한다.
    break
}


// 셀프 연습 문제 
import UIKit

var greeting = "Hello, playground"



var choice: String = "보자기"

switch choice {
    case "가위":
        print("가위냈네!")
    case "바위":
        print("바위냈네!")
    case "보", "보자기":
        print("보 혹은 보자기 냈네!")
    default:
        print("이상한거 내지마~")
    break
}

var isTrue: Bool = true
switch isTrue {
case true:
    print("진실")
case false:
    print("거짓")
}


var num1 = 10
switch num1 {
case ..<10:
    print("10보다 작은 수야")
case 20:
    print("10보다 큰 숫자야 ")
case 10...20:
    print("1~9 사이에 숫자야")
    fallthrough
default:
    print("너가 정답이야!")
    break
}




var num = 30
0...50 ~= num
13...20 ~= num




//연습문제
//0도 이하: 영하 -0도 미만
//0~18도: 0도 이상 무덥지 않은 날씨
//19도 이상: 여름날씨
//마지막 공통 인사: 좋은 하루 보내세요!


var temperature = 19
switch temperature {
case ..<0:
    print("영하 -0도 미만 날씨")
case 0...18:
    print("0도 이상 무덥지 않은 날씨")
case 19...:
    print("여름날씨")
    fallthrough
default:
    print("좋은 하루 보내세요!")
}







