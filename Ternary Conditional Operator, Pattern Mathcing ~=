
/*:
 # Part5 - 삼항 연산자와 범위연산자
 -
 */
/*:
 ## 1) 삼항 연산자(Ternary Conditional Operator)
 * 기본 형태 / if문보다 조금은 한정적인 형태로 사용 가능
 ---
 */
// 연산자 == 수학적 기호
// 삼항 연산자 == 세가지 기호
// if / else 조건문을 더 편리하고 빠르게 선언하는 방법 == 삼항연산자
// 삼항 연산자 언제 사용하지? 선택지가 2가지인 경우에만!!, 삼항 연산자를 사용한다. (같은 타입끼리만 사용해야함)
// 삼항 연산자 단독으로 쓰이기 보다는, '결과 값을 대입하는데 주로 사용'. 앱을 실제 만들면서 많이 쓰이므로 익숙해질 예정
// let result = score >= 70 ? "Pass" : "Fail"




var a = 10


//if/else문

if a > 0 {
    print("1")
} else {
    print("2")
}



// 삼항 연산자 (위의 if/else문과 완벽하게 동일!)
// 삼항 연산자 == 물음표, 콜론, 3개의 항
// 삼항 연산자 언제 사용하지? 반드시 조건에 따라서 선택지가 2가지인 경우에만!!, 삼항 연산자를 사용한다.


a > 0 ? print("1") : print("2")
// a가 0보다 크면, 참과 거짓을 판단해서, 참이면 콜론을 기준으로 앞문장을 실행, 거짓이면? 콜론 뒤 문장을 실행한다.




// 한줄인 경우
// 주로 값을 대입하는 경우 (주로 값에서 2가지에서 한가지를 선택하는 경우)
// 삼항 연산자 언제 사용하지? 반드시 조건에 따라서 선택지가 2가지인 경우에만!!, 삼항 연산자를 사용한다.



//:> 조건에 따라 선택이 두가지인 경우 ➞ 삼항연산자를 떠올리자

/*:
 ---
 * 사용 예시
 ---
 */
//var a = 10

var name = a > 0 ? "스티브" : "팀쿡"
// a 가 0보다 큰 경우, 스티브를 선택, a가 0보다 작으면 팀쿡 선택
// a 는 10이니까 var name = "스티브" 를 선택한 것과 동일


//위는 아래와 완전히 같다..

if a > 0 {
    name = "스티브"
} else {
    name = "팀쿡"
}


------------
------------
------------
------------



    
/*:
 ## 3) 패턴매칭 연산자(~=)
 * 패턴매칭 연산자: 숫자가 범위내에 있는지 확인하는 연산자
 ---
 */
// 패턴매칭 연산자(~=) : 오른쪽에 있는 표현식이 왼쪽의 범위에 포함되는 지에 따라 참과 거짓을 리턴


let range = 1...10

range ~= 5
print(range ~= 5)

// 결과 값은 참과 거짓




/*:
---
* 10 <= n <= 100 이런 문장은 스위프트에서 성립하지 않는다.
---
*/
// 1) 스위프트에서 숫자가 어떤 범위내에 속하는지 알려고 할 때는 다음과 같이 작성하면 된다.
var n = 20

if n >= 10 && n <= 100 {          // 조건이 둘 다 참이면, 다음 문장을 출력
    print("10이상, 100이하입니다.")
}

// 2) 패턴매칭 연산자를 활용해서 다음과 같이 쓸 수도 있다. (위와 동일)

if 10...100 ~= n {
    print("10이상, 100이하입니다.")
}


// 셀프 연습

var z = 120
if z >= 100 && z <= 150 {
    print("100이상, 150이하입니다.")
}
if 100...200 ~= n {
    print("100이상, 200이하입니다.")
}







/*:
---
* 연습
---
*/

var age = 31

if 20...29 ~= age {
    print("20대 입니다.")
}


// 패턴매칭연산자는 스위치문에서도 활용 가능!
// 스위치문은 내부적으로 패턴매칭 연산자로 구현이 되어있음

switch age {
case 20...29:
    print("20대 입니다.")
case 30...39:
    print("30대 입니다.")
default :
    break
}






